service: mindhub
frameworkVersion: '3'

custom:
  cognito:
    userPoolArn: arn:aws:cognito-idp:us-east-1:598854603683:userpool/us-east-1_ACYhVKPRs

  dynamo:
    usersTable: 'users-table'
  
  s3:
    picturesBucket: 'mindhub-pictures-bucket'
    pictureUploadUrlTTL: 60
    pictureDownloadUrlTTL: 60
    allowedOrigins: 'https://mindhub.ar'
  
  esbuild: 
    bundle: true
    minify: false
    sourcemap: true
    exclude: [aws-sdk]
    target: node18
    define: 'require.resolve: undefined'
    platform: node
    concurrency: 10

  serverless-dynamodb:
    start:
      port: 8000
      docker: false
      migrate: true
    stages: dev

provider:
  name: aws
  runtime: nodejs18.x
  apiGateway:
      shouldStartNameWithService: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ UsersTable, Arn ]
        - Effect: Allow
          Action:
            - s3:putObjectAcl
          Resource:
            - Fn::GetAtt: [ PicturesBucket, Arn ]
          
  environment:
    DYNAMO_USERS_TABLE: ${self:custom.dynamo.usersTable}
    S3_PICTURES_BUCKET: ${self:custom.s3.picturesBucket}
    S3_PICTURE_UPLOAD_URL_TTL: ${self:custom.s3.pictureUploadUrlTTL}
    S3_PICTURE_DOWNLOAD_URL_TTL: ${self:custom.s3.pictureDownloadUrlTTL}
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    NODE_OPTIONS: --enable-source-maps --stack-trace-limit=1000

functions:
  app: 
    handler: dist/main.handler
    events:
      - http:
          method: any
          path: /{any+}
          cors: true
          integration: lambda-proxy
          authorizer:
            name: PrivateAuthorizer
            type: COGNITO_USER_POOLS
            arn: ${self:custom.cognito.userPoolArn}

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.dynamo.usersTable}
        AttributeDefinitions: 
          - AttributeName: _id
            AttributeType: S
        KeySchema: 
          - AttributeName: _id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
    PicturesBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: mindhub-pictures-bucket
        CorsConfiguration:
          CorsRules:
          - AllowedHeaders:
              - "*"
            AllowedMethods:
              - GET
              - PUT
            AllowedOrigins:
              - ${self:custom.s3.allowedOrigins}
    
plugins:
  - serverless-offline
  - serverless-dynamodb

package:
  patterns:
    - "!*"
    - "!*/**"
    - "node_modules/**"
    - "dist/**"
