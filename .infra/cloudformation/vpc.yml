AWSTemplateFormatVersion: "2010-09-09"

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Ipv4IpamPoolId: CidrBlock

  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: us-east-1a
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: true
      VpcId:
        Fn::GetAtt: [ VPC, VpcId ]
  
  PublicSubnetB:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: us-east-1b
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: true
      VpcId:
        Fn::GetAtt: [ VPC, VpcId ]

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: us-east-1
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: false
      VpcId:
        Fn::GetAtt: [ VPC, VpcId ]

Outputs:
  VPCId:
    Value:
      Fn::GetAtt: [ VPC, VpcId ]
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-VpcId"
  
  PublicSubnetAId:
    Value:
      Fn::GetAtt: [ PublicSubnetA, SubnetId ]
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-PublicSubnetAId"

  PublicSubnetBId:
    Value:
      Fn::GetAtt: [ PublicSubnetB, SubnetId ]
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-PublicSubnetBId"